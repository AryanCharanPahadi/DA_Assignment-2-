use mavenmovies;

-- Question 1 Retrive the total number of rental made in sakila database.

select * from rental;
select count(rental_id) from rental;

-- Question 2 Find the average retnal duration (in days) of movies retned from sakila daatabase.

select * from film;
select avg(rental_duration) from film;

-- Question 3 Display the first name and last name of customer in upper case.

select * from customer;
select upper(first_name)  as First_Name, upper(last_name) as Last_Name from customer;

-- Question 4 Extract the month from the rental date and display its alongside the rentalID.

SELECT * FROM rental;
select rental_id , month(rental_date) from rental;

-- Question 5 Retrive the count of rental for each customer (Display the customer id and count of rentals).

SELECT * FROM rental;
select customer_id , count(rental_id) from rental group by customer_id;

-- Question 6 Find the total revenue generated by each store.

select * from store;
select * from payment;

select store_id , count(amount) as Total_Revenue from store join payment on store.store_id = payment.staff_id group by store_id;

-- Question 7 Display the title of movies , customer first name , last name who rented it. 
select * from inventory;
select * from film;
select * from customer;
select * from rental;

select f.title , c.first_name , c.last_name  from rental as r  left join customer as c on r.customer_id = c.customer_id left join 
inventory as i on r.inventory_id = i.inventory_id left join film as f on i.film_id = f.film_id order by title asc;

-- Question 8 Retrive the names of all actor who have apperared in the film "Gone with the wind"

select * from film_actor;
select * from film;
select * from actor;
SELECT 
    title, first_name , last_name
FROM
    actor
        INNER JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        INNER JOIN
    film ON film.film_id = film_actor.film_id
WHERE
    title LIKE 'Gone with the wind';
    
-- Group By 

-- Question 1 Determine the total number of rentals for each category of movies.alter

select * from film_category;
select * from film;
select * from rental;
select * from category;
select * from inventory;

select count(rental_id) as Tot_No_rental , name from film as f join film_category as fc on f.film_id = fc.film_id join category as c on fc.category_id = c.category_id 
join inventory as i on f.film_id = i.film_id join rental as r on i.inventory_id = r.inventory_id  group by name order by  tot_no_rental desc;


-- Question 2 Find the average rental rate of movies in each language.

select * from film;
select * from language;

select avg(rental_rate) , l.name from film as f join language as l on f.language_id = l.language_id group by name;


-- Question 3 retrieve the customers name along with the total amount they have spent on rentals.

select  *  from customer; 
select * from rental;
select * from payment;

select first_name , last_name , sum(amount) from customer
join rental on customer.customer_id = rental.customer_id 
join payment on rental.customer_id = payment.customer_id group by customer.customer_id;


-- Question 4 List the titles of movies rentad by each customer in a particular city.

select * from customer;
select * from address;
select * from city;
select * from rental;
select * from inventory;
select * from film;

select concat(c.first_name , " " ,  c.last_name) as Full_Name , f.title , city.city from customer as c join rental  as r on c.customer_id = r.customer_id
join inventory as i on r.inventory_id = i.inventory_id join film as f on i.film_id = f.film_id join address as a on c.address_id = a.address_id join city on 
city.city_id = a.city_id;  

-- Question 5 Display the top 5 rented movies along wuith the number of times they've been rented.

select * from film;
select * from rental;
select * from inventory;

select f.title as rented_movies , count(r.customer_id) as  no_of_times from rental as r  join inventory as i on r.inventory_id = i.inventory_id 
 join film as f on i.film_id = f.film_id group by title order by no_of_times desc limit 5;

-- Question 6 Determine the customers who have rented movies from both store (store ID 1 and store ID 2). 

select * from rental;
select * from inventory;
select * from customer;
select * from store;

select c.first_name , c.last_name , email from customer as c  join rental as r on c.customer_id = r.customer_id 
join inventory as i on r.inventory_id = i.inventory_id 
join store as s on i.store_id = s.store_id 
where s.store_id in (1,2)
group by c.customer_id 
having count(distinct s.store_id )= 2 ;